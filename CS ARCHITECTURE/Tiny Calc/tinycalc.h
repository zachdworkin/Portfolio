#define TC_COMMAND_QUIT 0#define TC_COMMAND_OK 1#define TC_COMMAND_INVALID 0#define TC_MEM_SZ 5typedef struct _tc_mem {double vals[TC_MEM_SZ];int most_recent;} tc_memory_t;//--------------------------- read_command --------------------------------//// reads an operator (char) and an operand (double) from stdin. function   //// continues to read from stdin until a valid operator is entered.         ////                                                                         //// when q or Q are typed for the operator, read_command will return        //// TC_COMMAND_QUIT and leave the values of the function parameters         //// unchanged.  otherwise it will return TC_COMMAND_OK and update the       //// values of the function parameters with the values read from stdin.      ////-------------------------------------------------------------------------//int read_command(char *operator, double *operand);//----------------------------check_command -------------------------------//// verifies if an operand is supported by TinyCalc.                        ////                                                                         //// returns TC_COMMAND_OK if the operand or command (m,M,q,Q) is supported  //// otherwise returns TC_COMMAND_INVALID.                                   ////-------------------------------------------------------------------------//int check_command(char operator);
